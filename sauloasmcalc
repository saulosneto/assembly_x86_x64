	.file	"sslack_calc.o"
	.text
	.section	.rodata
	.align 8
.LC0:
	.string	"Escolha um dos operadores matem\303\241ticos (+, -, *,): "
.LC1:
	.string	"%c"
	.align 8
.LC2:
	.string	"Digite o primeiro n\303\272mero. D\303\252 ENTER e digite o outro: "
.LC3:
	.string	"%lf %lf"
.LC4:
	.string	"%.1lf + %.1lf = %.1lf"
.LC5:
	.string	"%.1lf - %.1lf = %.1lf"
.LC6:
	.string	"%.1lf * %.1lf = %.1lf"
.LC7:
	.string	"%.1lf / %.1lf = %.1lf"
.LC8:
	.string	"Deu merda, faz direito."
	.text
	.globl	main
	.type	main, @function
main:
.LFB0:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	leaq	.LC0(%rip), %rdi
	call	puts@PLT
	leaq	-25(%rbp), %rax
	movq	%rax, %rsi
	leaq	.LC1(%rip), %rdi
	movl	$0, %eax
	call	__isoc99_scanf@PLT
	leaq	.LC2(%rip), %rdi
	call	puts@PLT
	leaq	-16(%rbp), %rdx
	leaq	-24(%rbp), %rax
	movq	%rax, %rsi
	leaq	.LC3(%rip), %rdi
	movl	$0, %eax
	call	__isoc99_scanf@PLT
	movzbl	-25(%rbp), %eax
	movsbl	%al, %eax
	cmpl	$43, %eax
	je	.L3
	cmpl	$43, %eax
	jg	.L4
	cmpl	$42, %eax
	je	.L5
	jmp	.L2
.L4:
	cmpl	$45, %eax
	je	.L6
	cmpl	$47, %eax
	je	.L7
	jmp	.L2
.L3:
	movsd	-24(%rbp), %xmm1
	movsd	-16(%rbp), %xmm0
	addsd	%xmm1, %xmm0
	movsd	-16(%rbp), %xmm1
	movq	-24(%rbp), %rax
	movapd	%xmm0, %xmm2
	movq	%rax, -40(%rbp)
	movsd	-40(%rbp), %xmm0
	leaq	.LC4(%rip), %rdi
	movl	$3, %eax
	call	printf@PLT
	jmp	.L8
.L6:
	movsd	-24(%rbp), %xmm0
	movsd	-16(%rbp), %xmm1
	subsd	%xmm1, %xmm0
	movsd	-16(%rbp), %xmm1
	movq	-24(%rbp), %rax
	movapd	%xmm0, %xmm2
	movq	%rax, -40(%rbp)
	movsd	-40(%rbp), %xmm0
	leaq	.LC5(%rip), %rdi
	movl	$3, %eax
	call	printf@PLT
	jmp	.L8
.L5:
	movsd	-24(%rbp), %xmm1
	movsd	-16(%rbp), %xmm0
	mulsd	%xmm1, %xmm0
	movsd	-16(%rbp), %xmm1
	movq	-24(%rbp), %rax
	movapd	%xmm0, %xmm2
	movq	%rax, -40(%rbp)
	movsd	-40(%rbp), %xmm0
	leaq	.LC6(%rip), %rdi
	movl	$3, %eax
	call	printf@PLT
	jmp	.L8
.L7:
	movsd	-24(%rbp), %xmm0
	movsd	-16(%rbp), %xmm1
	divsd	%xmm1, %xmm0
	movsd	-16(%rbp), %xmm1
	movq	-24(%rbp), %rax
	movapd	%xmm0, %xmm2
	movq	%rax, -40(%rbp)
	movsd	-40(%rbp), %xmm0
	leaq	.LC7(%rip), %rdi
	movl	$3, %eax
	call	printf@PLT
	jmp	.L8
.L2:
	leaq	.LC8(%rip), %rdi
	call	puts@PLT
.L8:
	movl	$10, %edi
	call	putchar@PLT
	movl	$0, %eax
	movq	-8(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L10
	call	__stack_chk_fail@PLT
.L10:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE0:
	.size	main, .-main
	.ident	"GCC: (Sauloslack, GCC 7.5.0)"
	.section	.note.GNU-stack,"",@progbits
